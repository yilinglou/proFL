<?xml version="1.0"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<document>
 <properties>
  <title>Upgrade from 2.5 to 3.0</title>
  <author email="dev@commons.apache.org">Commons Documentation Team</author>
 </properties>
<body>

<section name="Upgrade to 3.0">
<p>
These are the release notes and advice for upgrading Commons-Lang from
version 2.5 to version 3.0. <br/><br/>See '<a href="article3_0.html">What's new in 3.0?</a>' for more information.
<source>
INTRODUCTION:

This document contains the release notes for the 3.0 version of Apache Commons Lang.
Commons Lang is a set of utility functions and reusable components that should be of use in any 
Java environment.

Lang 3.0 now targets Java 5.0, making use of features that arrived with Java 5.0 such as generics, 
variable arguments, autoboxing, concurrency and formatted output.

IMPROVEMENTS IN 3.0
===================

(to improve)

Sub-task

    * [LANG-491] - ExceptionUtils + ExceptionUtilsTest needs an overhaul
    * [LANG-512] - Compare performance of replace method to regex in Java
    * [LANG-516] - Define standard for escape/unescape XML
    * [LANG-517] - Define standard for escape/unescape HTML
    * [LANG-518] - Define standard for escape/unescape 'JavaScript'
    * [LANG-519] - Define standard for escape/unescape Java

Improvement

    * [LANG-238] - Add equals(type[]) to NumberUtils
    * [LANG-280] - Improve wrap method on WordUtils
    * [LANG-290] - EnumUtils for JDK 5.0
    * [LANG-293] - StringEscapeUtils.unescape* can be faster
    * [LANG-312] - DateFormatUtils.format with Timezone parameter "CET" produces wrong date in 
                   summer time 1945 to 1949
    * [LANG-336] - Finally start using generics.
    * [LANG-340] - performance problem with EqualsBuilder.append()
    * [LANG-355] - StrBuilder should implement CharSequence and Appendable
    * [LANG-401] - Replace iteration loops with foreach where appropriate to increase readability
    * [LANG-420] - Rename ObjectUtils.toString() to asString().
    * [LANG-424] - Improve Javadoc for StringUtils class
    * [LANG-433] - clone() method for ObjectUtils
    * [LANG-447] - String case-insensitive comparisons, equals, and hashing
    * [LANG-458] - Refactor Validate.java to eliminate code redundancy
    * [LANG-479] - Document where in SVN trunk is.
    * [LANG-504] - bring ArrayUtils.isEmpty to the generics world
    * [LANG-507] - StringEscapeUtils.unescapeJava should support \u+ notation
    * [LANG-508] - Validate: add message parameter construction via elllipsis notation to 
                   speed up processing
    * [LANG-510] - Convert StringUtils API to take CharSequence
    * [LANG-513] - Better EnumUtils
    * [LANG-528] - Mutable classes should implement an appropriately typed Mutable interface
    * [LANG-531] - Add defaultIfEmpty or nullIfEmpty to ArrayUtils
    * [LANG-540] - Make NumericEntityEscaper immutable
    * [LANG-548] - Use Iterable on API instead of Collection
    * [LANG-558] - Overhaul Validate class
    * [LANG-566] - Replace lastIndexOf methods with -ve index support?
    * [LANG-570] - Do the test cases really still require main() and suite() methods?
    * [LANG-579] - Add new Validate methods
    * [LANG-597] - Add more utility methods for generic types
    * [LANG-599] - ClassUtils.getClass(): Allow Dots as Inner Class Separators
    * [LANG-605] - DefaultExceptionContext overwrites values in recursive situations
    * [LANG-612] - Add ability to do only basic escape &amp; unescape to StringEscapeUtils
    * [LANG-632] - provide a date2calendar convenience method
    * [LANG-633] - Use same optimization in toBooleanObject(String) as in toBoolean(String str)

New Feature

    * [LANG-276] - MutableBigDecimal and MutableBigInteger
    * [LANG-283] - Visitors for Builders
    * [LANG-285] - Wish : method unaccent
    * [LANG-308] - CharUtils - Utilities to work on a char[] in the same way as a String
    * [LANG-316] - Enable CaseInsensitivity in EqualsBuilder and HashCodeBuilder
    * [LANG-324] - Weak references with time limit?
    * [LANG-330] - Add StringBufferUtils or overload StringUtils methods
    * [LANG-354] - Implementation of a CloneBuilder Class
    * [LANG-358] - ObjectUtils.coalesce
    * [LANG-373] - Quote regexp
    * [LANG-386] - LeftOf/RightOfNumber in Range convenience methods necessary
    * [LANG-435] - Add ClassUtils.isAssignable() variants with autoboxing
    * [LANG-444] - StringUtils.emptyToNull
    * [LANG-446] - Add null-safe ObjectUtils.clone()
    * [LANG-496] - A generic implementation of the Lazy initialization pattern
    * [LANG-497] - Addition of ContextedException and ContextedRuntimeException
    * [LANG-498] - Add StringEscapeUtils.escapeText() methods
    * [LANG-499] - Add support for the handling of ExecutionExceptions
    * [LANG-501] - Add support for background initialization
    * [LANG-524] - ArrayUtils.addAll for between Object arrays and Collections
    * [LANG-529] - Add a concurrent package
    * [LANG-533] - Validate: support for validating blank strings
    * [LANG-537] - Add ArrayUtils.toArray to create generic arrays
    * [LANG-545] - Add ability to create a Future for a constant
    * [LANG-546] - Add methods to Validate to check whether the index is valid for the array/list/string
    * [LANG-553] - Add TypeUtils class to provide utility code for working with generic types
    * [LANG-559] - New Validate utility methods
    * [LANG-560] - New TimedSemaphore class
    * [LANG-573] - Add new APIs to StringUtils (countLowerCase, countUpperCase, countDigits)
    * [LANG-576] - Add methods for cloneables to ObjectUtils
    * [LANG-580] - Add Event Support Utilities
    * [LANG-582] - Provide an implementation of the ThreadFactory interface
    * [LANG-588] - Create a basic Pair&lt;L, R&gt; class
    * [LANG-594] - DateUtils equal &amp; compare functions up to most significant field
    * [LANG-601] - Add Builder Interface / Update Builders to Implement It
    * [LANG-609] - Support lazy initialization using atomic variables
    * [LANG-610] - Extend exception handling in ConcurrentUtils to runtime exceptions
    * [LANG-625] - Add StringUtils.containsWhitespace(String str)

Task

    * [LANG-396] - Investigate for vararg usages
    * [LANG-398] - Annotations?
    * [LANG-438] - Remove @deprecateds
    * [LANG-490] - Note to rewrite package.html's before release.
    * [LANG-492] - Remove code handled now by the JDK
    * [LANG-493] - Remove code that does not hold enough value to remain
    * [LANG-505] - Rewrite StringEscapeUtils
    * [LANG-515] - Define standard escape/unescape behaviours
    * [LANG-541] - Replace StringBuffer with StringBuilder
    * [LANG-551] - Replace Range classes with generic version
    * [LANG-562] - Change Maven groupId
    * [LANG-563] - Change Java package name
    * [LANG-590] - Remove JDK 1.2/1.3 bug handling in StringUtils.indexOf(String, String, int)
    * [LANG-600] - Javadoc is incorrect for public static int lastIndexOf(String str, String searchStr)

Wish

    * [LANG-425] - Sequence(String)Utils
    * [LANG-539] - Compile commons.lang for CDC 1.1/Foundation 1.1

BUG FIXES IN 3.0
================

    * [LANG-11] - Depend on JDK 1.5+
    * [LANG-52] - Validate.notNull should throw NullArgumentException
    * [LANG-66] - StringEscaper.escapeXml() escapes characters &gt; 0x7f
    * [LANG-302] - StrBuilder does not implement clone()
    * [LANG-339] - StringEscapeUtils.escapeHtml() escapes multibyte characters like Chinese, Japanes, etc.
    * [LANG-369] - ExceptionUtils not thread-safe
    * [LANG-418] - Javadoc incorrect for StringUtils.endsWithIgnoreCase
    * [LANG-439] - StringEscapeUtils.escapeHTML() does not escape chars (0x00-0x20)
    * [LANG-448] - Lower Ascii Characters don't get encoded by Entities.java
    * [LANG-468] - JDK 1.5 build/runtime failure on LANG-393 (EqualsBuilder)
    * [LANG-474] - Fixes for thread safety
    * [LANG-478] - StopWatch does not resist to system time changes
    * [LANG-480] - StringEscapeUtils.escapeHtml incorrectly converts unicode characters above U+00FFFF 
                   into 2 characters
    * [LANG-481] - Possible race-conditions in hashCode of the range classes
    * [LANG-561] - unescapeHtml has been dropped without going through deprecation
    * [LANG-564] - Improve StrLookup API documentation
    * [LANG-568] - @SuppressWarnings("unchecked") is used too generally
    * [LANG-571] - ArrayUtils.add(T[] array, T element) can create unexpected ClassCastException
    * [LANG-585] - exception.DefaultExceptionContext.getFormattedExceptionMessage catches Throwable
    * [LANG-589] - StringUtils: indexOf("", String) and indexOf("", char) have different behaviour
    * [LANG-602] - ContextedRuntimeException no longer an 'unchecked' exception
    * [LANG-606] - EqualsBuilder causes StackOverflowException
    * [LANG-608] - Some StringUtils methods should take an int character instead of char to use 
                   String API features.
    * [LANG-628] - Javadoc for HashCodeBuilder.append(boolean) does not match implementation.
    * [LANG-630] - mutable.MutableObject defines equals(MutableObject) method and uses Object.equals(Object)
    * [LANG-631] - StringUtils JavaDoc contains erroneous examples
    * [LANG-635] - CompareToBuilder.reflectionCompare(Object, Object, boolean, Class) ignores 
                   third compareTransients parameter

</source>
</p>
</section>

</body>
</document>
